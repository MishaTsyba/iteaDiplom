//
//  Program.swift
//  MikeTsyba-ITEA-Diplom
//
//  Created by Mykhailo Tsyba on 11/30/19.
//  Copyright © 2019 miketsyba. All rights reserved.
//

import Foundation

class Program {
	//MARK: - Cathedrals
	var allCathedrals = "All"
	var mobDev = "Mobile Development"
	var feDev = "Front End Development"
	var design = "Design"
	var qa = "QA"
	var other = "Other"
	var programming = "Programming"

	//MARK: - Faculties
	var ios = "iOS"
	var android = "Android"
	var react = "React"
	var fe = "Front End"
	var js = "JS"
	var wd = "Web Design"
	var testing = "Testing"
	var dm = "Digital Marketing"
	var pm = "Project Management"
	var genProgramming = "General Programming"

	//MARK: - Courses
	//MARK: - Courses
	var iosBasic = """
		Общие сведения и настройки для разработки
		Введение. Документация Apple
		Среда разработки Xcode. Настройка симуляторов устройств
		Создание проекта
		Общие приемы ООП
		Шаблоны проектирования
		Обобщение и параметризация
		Изучение языка Swift
		Основные сведения о языке. Синтаксис
		Операторы
		Строки и символы
		Коллекции
		Управленческие структуры
		ООП в Swift
		Свойства и методы
		Наследование и инкапсуляция
		Жизненный цикл объектов
		Механизмы управления памятью
		Протоколы, категории
		Работа с ресурсами
		Строки, локализация
		Изображения
		Работа с коллекциями
		Наборы (Set)
		Массивы (Array)
		Словари (Dictionary)
		Поток
		Потоки Thread
		Очереди Queues
		Библиотека Grand Central Dispatch (GCD)
		Подробная работа с графикой в ​​Interface Builder
		Xib-файлы
		Storyboard
		Основы работы с системой контроля версий
		Контроллеры и переходы между ними (Segue)
		Элементы стандартной библиотеки Cocoa Touch
		Диалоговые окна UIAlertView
		Модальные меню UIActionSheets
		Навигация с помощью UINavigationController, UITabBarController
		Рисование и анимация
		Core Graphics и элементарные графические примитивы
		Анимация
		Отображение множества элементов
		Таблица (UITableView)
		Произвольная двумерная коллекция (UICollectionView)
		Обработка пользовательского ввода
		Кнопки, поля, выпадающее меню
		Жесты, нажатие (3D Touch)
		Адаптивная верстка интерфейсов
		Адаптивная верстка с помощью Autolayout
		Ручная верстка
		Общие настройки программы и оптимизация
		Подключение и использование сторонних библиотек (Cocoapods)
		Анализ потребления памяти
		Анализ производительности
		Практическое занятие. Подготовка финального проекта
	"""
	var iosAdvanced = """
		Детальное изучение сложных предустановленных шаблонов iOS-проектов
		Page-Based Application
		Tabbed Application
		Master-Detail Application
		Фоновый режим работы приложения
		Background Modes, Background Fetch
		CoreData
		Общие принципы и включение механизма в проект
		Модели и связи
		Запись и чтение данных
		Работа с системой контроля версий
		Networking
		Загрузка и отображение Web-страницы. Графический элемент UIWebView. Основы HTML
		Класс NSURLConnection. Основные принципы передачи данных. Загрузка файла
		HTTP-протокол. GET-, POST-, Multipart-запросы. Формат JSON
		Системные и пользовательские события
		Нотификации (Local/Remote)
		Обработка изображений
		Класс Core Image
		Методики обработки изображений
		Сенсоры и датчики
		Обработка изображений
		Телефония, входящие/исходящие звонки
		Отправка/прием SMS-сообщений
		Отправка email
		Список контактов, запись/чтение контактов
		GPS/MapKit
		Механизм получения и обработки геоданных CoreLocation
		Apple-карты MapKit
		Google Maps
		Push-сообщения
		Интеграция с различными Apple- и другими открытыми Web-сервисами
		Социальные сети
		Принципы тестирования и профилирования приложений
		Темы по пожеланиям студентов
		Публикация приложения в App Store
	"""
	var androidBasic = """
		Введение
		Специфика операционной системы
		SDK/NDK, IDE, эмуляторы. Основы работы с Git
		Структура проекта
		Gradle
		Класс Application как точка входа в приложение
		Жизненный цикл приложения, Task
		Основные компоненты приложения
		Context
		Manifest
		Intent
		Activity
		Service
		ContentProvider
		BroadCast (Receiver)
		Ресурсы/Ассеты
		Строки (локализации)
		Размеры
		Изображения (Растр/Вектор)
		Стили
		View/ViewGroup
		Класс View
		Класс ViewGroup
		Краткий разбор наиболее популярных наследников View, ViewGroup
		Первое простое приложение
		XML-верстка
		Рендеринг xml, взаимодействие с элементами UI
		Action Bar
		Menu
		Dialog
		Навигация и взаимодействие экранов
		Углубленный разбор возможностей Intent
		Взаимодействие Activity
		Fragment
		BackStack, навигация, передача данных
		Списки
		Адаптеры
		ListView, GridView
		ViewHolder
		RecyclerView
		Асинхронное программирование в Android
		Thread
		Runnable
		Handler
		AsyncTask
		Локальные данные
		SharedPreference
		Работа с памятью
		Работа с базами данных (SQLite)
		Rest
		Основные принципы, HTTP/HTTPS-протоколы
		JSON
		Нативные инструменты
		Сервисы
		Сервис
		Intent Service
		Взаимодействие с ОС
		BroadCast/Broadcast Receiver
		Content Provider
		Планировщик, оповещения, widgets
		Архитектура
		Паттерны проектирования
		Популярные в Android поведенческие/порождающие паттерны
		SOLID
		MVP, MVVM, MVC
		Обзор популярных библиотек
		Gson
		Picasso/Glide
		Retrofit2
		ORM на примере Room (Google Architecture components)
	"""
	var androidAdvanced = """
		CardView
		AppBarLayout
		Custom ToolBar
		Работа с системой контроля версий
		Custom Navigation Drawer
		Библиотека ButterKnife (ее подключение и применение)
		Библиотека Dagger2
		Разбор аннотаций @Provide, @Ingect, @Singleton
		Injection в конструктор
		Injection в метод
		Injection в поле
		Работа с Модулями и Саб-модулями
		Архитектура приложения. И почему MVP лучше.
		Retrofit2 и с чем его едят
		RxAndroid — базовые знания
		RxAndroid в сочетании с Retrofit2
		Библиотека Moxy
		Фоновая работа приложений. Сервисы Services
		Запуск и завершение работы сервисов. Жизненный цикл сервиса
		Синхронная работа сервисов
		Взаимодействие сервиса и активностей. Привязка сервисов
		Регистраторы системных событий BroascastReceiver
		Internet
		Формат JSON. Json-парсер
		Типы HTTP-запросов. GET-запрос. POST-запрос
		Геолокация
		База данных SQLite. Общие сведения
		Настройка и подключение базы к проекту
		Управление таблицами.
		База данных SQLite. Язык SQL. Классические запросы в базу
		Запросы INSERT, SELECT, UPDATE, DELETE. Класс Cursor
		База данных SQLite + RxAndroid
		Полезные ORM и какая из них лучше
		Карты GoogleMaps
		Социальные сети. Основные сведения
	"""
	var reactBasic = """
		Введение
		О курсе
		Обзор технологии React
		Обзор технологии React Native
		Актуальность мобильной разработки
		WebView. Гибридные приложения или нативные приложения
		Настройка окружения
		Windows
		Mac
		Linux
		Основы работы с React Native
		Проблемы при настройке среды для работы
		Структура проекта
		«Hello, World!» на React Native
		React vs React Native
		Создание компонентов с JSX
		Единый компонент, как точка входа для обеих платформ
		Стилизация приложения
		Написание стилей для React Native
		Введение во FlexBox
		Создание стилизированных компонентов
		Повторное использование компонентов и стилей
		Получение удаленных данных
		HTTP
		Шаблон компонента «Список»
		Классо-ориентированные компоненты
		Методы жизненного цикла компонента
		Получение данных средствами React Native
		Состояние компонента
		Визуализация списка компонента
		Компоненты для множественного использования - «Карточка»
		Стилизация «Карточки»
		Передача компонента в свойства
		Работа с визуальными компонентами
		Картинки
		Контент, который скроллится
		Кнопки
		Обработка событий
		Стилизация кнопок
		Работа со слоями
		Вкладки
		Обработка данных
		Процесс логина
		Обработка ошибок
		Создание анимации-загрузки
		Условный рендеринг JSX
		Работа с формой
		Обработка событий авторизации
		Redux
		Основы функционального программирования
		Flux
		Основы Redux
		Шаблоны и реализации
		Создание приложения
		Header-приложения
		ListView
		Рендеринг одной строки данных
		Стилизация списков
		Reducer
		Элементы, реагирующие на касания
		Вынесение логики с компонентов
		Анимация
		Тестирование
		Обработка данных React vs Redux
		Форма логирования в Redux-мире
		Обновление формы авторизации
		Неизменность состояния (Immutable State)
		Синхронные и асинхронные действия
		Введение в Redux Thunk
		Создания профиля пользователя
		Навигация
	"""
	var reactAdvanced = """
		Работа с анимациями
		Система анимаций
		Модуль анимаций
		Простейшие анимации
		Движение Круга
		Взаимодействие компонентов
		Кастомизация индивидуальных карточек
		Обработка жестов
		Система отзывов на жесты
		Обработчики событий экрана
		Объект "Жест"
		Перетаскивание карточек
		Применение анимационных стилей
		Анимирование одной карточки
		Поворот элементов
		Интерполяция значений поворота
		Определение минимальных дистанций для свайпа
		Колбеки на свайпы
		Одноразовая авторизация по паролю
		Обзор обычного процесса авторизации
		Одноразовый пароль в деталях
		Обычный сервер против Google Cloud Functions
		Настройка проекта Firebase
		Объект запроса и ответа
		Facebook-аутентификация
		Процесс Facebook-аутентификации
		Консоль разработчика Facebook
		Настройка Redux
		Асинхронное хранение данных
		Логирование в Facebook
		Работа с информацией в offline
		Push-уведомления и сохранение данных
		Сохранение состояния приложения
		Redux-хранение данных
		Push-оповещения
		Обзор Push-оповещений
		Регистрация Push-оповещений
		Генерация Push-оповещений
		Тестирование
		MapViews на React Native
	"""
	var htmlCss = """
		Ввод в веб-технологии
		Предназначение технологий;
		Стек разработки для сайта;
		Принцип работы «клиент-сервер»;
		Консоль разработчика;
		Текстовый редактор и IDE;
		Что такое HTML&CSS&JS и их взаимодействие;
		HTML
		Базовые принципы верстки;
		Знакомство с понятием тега и атрибута;
		Обязательная структура любой веб-страницы;
		Понятия строчных и блочных элементов веб страницы;
		Понятия парных и непарных тегов;
		Семантические теги;
		Спецсимволы;
		Работа с тегами и атрибутами;
		Работа с ссылками и якорями;
		Работа с текстом и комментариями;
		Работа с различными системами цветов в HTML;
		Работа с изображениями;
		Нумерованные и маркированные списки;
		Работа с блоками (div);
		Таблицы;
		Формы;
		Элементы форм (инпуты);
		Айфреймы;
		Подключение разных модулей к документу HTML;
		Форматирование элементов HTML;
		Работа с браузером
		Установка полезных расширений для верстки;
		Отладчик кода;
		Хостинговые и доменные панели;
		Файловый менеджер (Filezilla);
		CSS
		Что такое CSS;
		Базовые принципы написания стилей;
		3 способа добавления CSS на HTML-страницу;
		Внешние таблицы стилей;
		Относительные и статичные единицы измерения;
		Работа со шрифтами (семейства, стили, размеры, насыщенность)
		Работа с границами элементов (бордер, радиус, тени);
		Работа с отступами и размерами элементов;
		Градиенты;
		Работа со свойствами float и clear;
		Flex box;
		Работа с фоном (изображения и цвет, размеры, прозрачность);
		Селекторы;
		Продвинутые селекторы;
		Приоритеты стилей;
		Перезапись стилей;
		Псевдоклассы, псевдоэлементы;
		Работа с анимацией элементов;
		Валидация;
		Медиазапросы;
		Адаптивная верстка;
		Резиновая верстка;
		Pixel perfect верстка;
		Статичная верстка;
		Кроссбраузерная верстка;
		Смешанная верстка;
		Фотошоп для разработчика
		Нарезка макета;
		Основные инструменты;
		Понятия сетки;
		CMS Wordpress: создание и подключение базы данных;
		Настройка тем;
		Настройка плагинов;
		Настройка меню;
		Выгрузка на сервер;
		Правила именования классов по BEM;
		Библиотека Bootstrap;
		Основы препроцессора Less;
	"""
	var jsBasic = """
		Введение в Javascript
		Общая информация о языке и его особенности
		Справочники, спецификации и ссылки на них
		Консоль разработчика
		Внешние скрипты и порядок их подключения
		Переменные и правила их именования
		Типы данных и приведение типов
		Основные операторы
		Операторы сравнения и логические значения
		Условные операторы
		Логические операторы
		Конструкция switch
		Циклы и функции
		Циклы 'for', 'while', 'do...while'
		Рекурсия и понятие стека
		Понятие и синтаксис функции
		Функциональные выражения
		Области видимости
		Псевдомассив 'arguments'
		Функции обратного вызова (callback)
		Массивы
		Перебирающие методы
		Внутреннее представление массивов
		Объекты
		Передача по ссылке
		Перебор свойств
		Стандартные встроенные объекты
		Работа с Git
		Работа с Git Bash
		Workflow от создания репозитория до его отправки на удаленный сервер
		Работа с ветками
		Работа с конфигурационными файлами
	"""
	var jsAdvanced = """
		Прототипное наследование
		Прототип объекта
		Свойство prototype
		Встроенные классы
		Функция - конструктор
		Наследование классов
		Внутреннее устройство метода 'extend' и полифилл 'Object.create'
		Функциональное наследование
		 ООП
		Общая информация про ООП
		Инкапсуляция
		Полиморфизм
		Наследование
		Абстракция данных
		Понятие 'класс'
		Контекст вызова и замыкания
		Работа с 'this' (4 способа использования)
		Использование 'call', 'apply'
		Работа с 'bind', карринг и полифилл
		Дескрипторы, геттеры и сеттеры свойств
		Шаблон проектирования 'Singletone' через замыкание
		Сборщик мусора
		Глобальный объект Window и работа с DOM
		Общая информация про 'window', 'navigator', 'document', 'location', 'history'
		Навигация по DOM элементам
		Свойства узлов
		Добавление и удаление узлов
		Работа со стилями
		Работа с координатами
		События
		Введение в браузерные события
		Порядок обработки событий (Event Loop)
		Асинхронные события
		Работа с SetTimeout/ SetInterval
		Всплытие и перехват
		Делегирование событий
		События с использованием мыши, клавиатуры и прокрутка
		Загрузка документа
		Работа с системой контроля версий
		Формирование страницы в браузере
		Формирование DOM пошагово
		Формирование Render Tree
		Порядок формирования CSSOM
		Оптимизация, минификация, работа с Http Cache.
		Способы хранения данных в браузере
		Cookies
		Localstorage/Sessionstorage
		IndexedDB
		Manifest
		ServiceWorker
		Progressive Web Application
		HTTP
		Введение в Http протокол
		Преимущества и недостатки протокола
		Работа с AJAX
		Общая информация про RESTful API
		JSON
		CORS
		Работа с WebSocket
		Протокол JSONP
	"""
	var ui = """
		Введение к курсу UI
		Этапы разработки продукта
		Понятие UI и UX. Роль UI дизайнера на проекте
		Инструменты. Графические редакторы Sketch, Figma
		Основы работы в Sketch и Figma.
		Краткий обзор вспомогательных инструментов (Invision, Avocode, Illustrator, Photoshop)
		Сбор требований и этап исследования
		Интервью с заказчиком, формирование брифа
		Изучение рынка и поиск референсов
		Создание мудборда проекта
		Презентация этапов работы
		Композиция. Базовые понятия
		Статика и динамика
		Контраст и нюанс
		Акцент, доминанта, ритм
		Шрифт
		Базовая теория. Классификация шрифтов
		Типографика для web
		Критерии выбора шрифтов для проекта
		Полезные ресурсы
		Цвет
		Психология цвета и маркетинговая составляющая
		Теория цвета. Принципы сочетания цветов
		Формирование палитры проекта
		Этапы работы над дизайном
		Скетчинг, варфрейминг
		Интерактивное прототипирование
		Мокапы, вижуал
		Модульные сетки
		Функции сетки
		Построение и настройка сетки
		Использование и принципы работы
		Принципы построения интерфейсов
		Особенности восприятия информации на веб ресурсах
		Визуальная иерархия. Работа с информационными блоками
		Расстановка приоритетов и акцентов на веб-страницах
		Элементы интерфейса и их состояния
		Элементы форм
		Элементы навигации
		Информационные элементы
		Прелоадеры
		Иконки и графика
		Иконки. Стили и критерии подбора.
		Использование иллюстраций, фотографий, видео.
		Фавиконки
		Технические требования для графики
		Полезные ресурсы
		Responsive and Adaptive design
		Mobile first/Desktop first подходы
		Мобильные версии сайта vs Адаптивный дизайн
		Подготовка макета для adaptive/responsive сайтов
		Правила подготовки макетов и изображений для Retina дисплеев
		Тестирование
		Тестирование дизайна в процессе создания продукта
		Улучшение дизайна на основе полученных данных
		Design hand-off
		Подготовка макетов для верстки
		Подготовка графических элементов
		История и тренды в Web-дизайне
		Экскурс в историю
		Обзор стилей Flat, Material, Fluent
		Актуальные тренды и визуальные приемы
		Анимация в дизайне интерфейсов
		Анимация интерфейса
		Анимация иллюстраций и иконок
		Популярные инструменты и сервисы
		Презентация проекта
		Проведение презентации и аргументация дизайн-решений
		Оформление портфолио структура и рекомендации. Онлайн платформы Behance, Dribbble
		Защита курсовой работы
	"""
	var ux = """
		Вступление
		Введение в дизайн интерфейсов
		Понятия UX и UI дизайна
		Методы исследований
			  Поиск проблем и определение UX-задач
		Основы Customer Development
		Методика Design Thinking
		Составление персон и Customer Journey Maps
		Интервью c пользователями
		Сбор и анализ информации
			  Идеи и решения
		Вспомогательный софт (Figma, Miro)
		Основы информационной архитектуры
		HMW / PAINstorming
		Mindmapping
		Скетчинг и card sorting
			  Прототипирование
		Визуальный дизайн в интерфейсе
		Material Design, Apple HIG и дизайн-системы
		Анимации и микровзаимодействия
		Прототипы в Figma
		Прототипы в Principle и InVision
		Тексты в интерфейсе, UX-writing
			  Тестирование
		Удаленное тестирование
		Документирование результатов
		A/B тестирование
		Юзабилити тестирование
		Survey, составление форм опроса
			  Работа в командах
		Эмпатия
		Фидбек — как давать и принимать
		Кросс-функциональные команды, роль UX
		Agile и Waterfall
		Google Design Sprints
		Аргументация решений
		Коммуникация на разных уровнях компании
			  Презентация
		Подготовка к демо
		Оформление презентаций
		Ответы на вопросы
		Демо собственного проекта 
	"""
	var tilda = """
		Базовый блок
		Типографика
		Верстка
		Цвет
		Вступительное занятие про Tilda
		Знакомство с интерфейсом
		Возможности
		Презентация проектов (что можно делать на тильде, как мы используем ее в ITEA)
		Ответы на вопросы
		Библиотека блоков
		Обзор функционала
		Кастомизация стандартных блоков
		Как оптимизировать картинки
		Как поменять шрифт, подключить свой
		Как поменять цвет ссылок (отдельно + через модификатор)
		Как загрузить бейдж для Facebook
		Zero-block
		Понятие контейнеров в Zero Block
		Нестандартные элементы
		Привязка элемента к сетке или окну браузера оси
		Единицы в px и %
		Наследственность свойств при редактировании разрешений
		Как тестировать в браузере
		Настройки сайта
		Страницы 404 ошибки
		Переадресация с версий http на https/без www на www
		Как прописать метатеги для SEO и для чего они нужны
		Как прописать отдельные теги для соцсетей
		Как задать ЧПУ адрес
		Теги H1-H3 и атрибуты изображений
		Страницы 404 ошибки
		Как тестировать в браузере
		Анимация
		Базовая анимация
		Пошаговая анимация
		Ховеры
		Формы
		Как подключить форму
		Формы в Zero Block
		Политика обработки персональных данных
		Организация работы с заказчиком
		(передача проекта)
		Условия работы
		Рекомендации
	"""
	var qaBasic = """
		Введение в тестирование ПО.
		Что такое тестирование. Для чего нужно тестирование программного обеспечения
		Жизненный цикл разработки ПО
		Основные документы, которые используются в процессе жизненного цикла разработки ПО
		Для чего нужен Test Plan и как его составлять
		Техника тест дизайна (Equivalence Partitioning, Boundary Values)
		Test Case как основной артефакт тестировщика
		Когда Test Case бывает негативный
		Составление тестового набора для первой тестируемой программы
		Понятие дефекта.
		Что такое баг
		Зачем и где описывать Bug report
		Что такое severity и priority
		Жизненный цикл дефекта
		Системы отслеживания ошибок. Обзор самых популярных систем
		Знакомство с багтрекинговой системой Jira. Описание багов в системе
		Виды требований.
		Виды документов с требованиями к программному обеспечению
		RDD
		SRS
		PRD
		BRD
		Критерии тестирования требований
		Полнота
		Однозначность
		Непротиворечивость
		Реализуемость
		Отслеживаемость
		Тестируемость
		Тестируем регистрационную форму. Специфика тестирования полей электронный адрес и телефон.
		Методологии тестирования.
		Проектная команда. Виды методологий тестирования программного обеспечения
		Водопадная модель
		V-модель
		Итеративная модель
		RUP
		MSF
		Agile
		SCRUM
		Спринт
		Резерв проекта
		Резерв спринта
		Диаграмма выгорания
		Стори Поинт
		Остановка Спринта
		Покер Планирования
		Встречи в Скраме
		Виды тестирования программного обеспечения.
		Функциональное тестирование
		Нефункциональное тестирование
		Тестирование, связанное с изменениями
		Use Case и Check List.
		Что такое Use Case. Для чего нужен. Чем Use Case отличается от Test Case
		Что такое Check List. Где и когда применяют Check List. Может ли Check List заменить Test Case
		Как составить Use Case и Check List на примере тестирования любого предмета
		Случайное тестирование и тестирование без требований
		Ad-Hoc – процесс тестирования без спецификации
		Exploratory – исследовательское тестирование
		Когда применять и для каких проектов
		Применение на практике
		Системы хранения и управления тестовыми случаями.
		Ознакомление с системой TestLink (Easy QA)
		Написание тестовых случаев в системе TestLink (Easy QA)
		Нефункциональные виды тестирования.
		Тестирование производительности
		Нагрузочное тестирование (Performance and Load Testing)
		Стрессовое тестирование (Stress Testing)
		Тестирование стабильности или надежности (Stability / Reliability Testing)
		Объемное тестирование (Volume Testing)
		Тестирование установки (Installation testing)
		Тестирование удобства пользования (Usability Testing)
		Конфигурационное тестирование (Configuration Testing)
		С помощью каких инструментов проводят и для чего
		Контроль полученных знаний.
		Пример стандартного собеседования
		Реальные задачи
		Что такое Pairwise Testing.
		Попарное тестирование. Когда, как и зачем применяется
		PICT - самый простой инструмент для автоматизации таких проверок
	"""
	var qaAdvanced = """
		Основные понятия BDD, TDD, ATDD
		Введение в Gherkin синтаксис
		Практические упражнения по написанию Сценариев
		Введение в HTML - язык разметки гипертекста
		Стандарт HTML. Структура HTML-документа
		Создание HTML-документа
		Создание гиперссылок
		Списки и таблицы
		Введение в CSS
		Типы стилей
		Базовый синтаксис CSS
		Селекторы тегов
		Automation Testing basics
		Что такое XML - расширяемый язык разметки
		Язык XHTML. Разница между HTML и XML
		XML Path Language (Xpath) — язык запросов к элементам xml или xhtml
		Синтаксис XPath. Простые запросы с помощью XPath
		Автоматизированные тесты с помощью Selenium IDE
		Selenium - инструмент, используемый для разработки тестовых сценариев
		Язык команд Selenium
		Создание тестовых сценариев c Selenium IDE
		Часто используемые команды Selenium
		Достоинства и недостатки автоматизации тестирования
		Процесс внедрении автоматизации тестирования
		Что автоматизировать?
		ROI в автоматизации тестирования - коэффициент окупаемости инвестиций
		Зачем измерять эффективность?
		Автоматизация с помощью Selenium IDE
		Что такое База данных
		Виды баз данных
		Реляционная БД
		Системой Управления Баз Данных (СУБД)
		Язык SQL
		SQL- стандарты
		Работа с базами данных в SQL Server
		Создание базовых запросов SELECT
		Объединение таблиц
		Сортировка данных в результате запроса
		Расширенная фильтрация данных
		Как выбрать неповторяющиеся значения из базы данных
		Логический оператор LIKE
		Статистические функции
		MySQL
		Группирование данных
		Предложение HAVING
		Выбор данных из нескольких таблиц
		Вложенный запрос
		Написание выражений используя разные типы JOIN
		MySQL
		Написание простого выражения CASE
		Хранимые процедуры
		Введение в тестирование мобильных приложений
		Виды мобильных приложений
		Особенности тестирования мобильных приложений
		Сервисы для бета-тестирования
		Облачные платформы устройств для тестирования мобильных приложений
		Мобильное тестирование на эмуляторах мобильных устройств
		Что такое Web Service?
		Протокол SOAP
		Структура протокола SOAP
		Язык описания web-сервисов WSDL
		Тестирование веб-сервисов
		SoapUI - кроссплатформенное клиентское оконное приложение
		Функциональное тестирование веб-сервисов
		Создание Test Case с помощью SOAP UI
		REST (Representational state transfer) – стиль архитектуры программного обеспечения для распределенных систем, таких как World Wide Web
		Управление информацией сервиса
		RESTful-системы
		Использование Rest-запросов при тестировании web-сервисов
		Инструмент POSTER для вызова запросов в API интерфейсе
		Создание GET запросов с помощью SOAP UI
	"""
	var qaAutomation = """
		Работа с IntelliJ IDEA (редактором для Java-кода)
		Работа с GIT и GitHub (cистемой контроля версий)
		Понятие алгоритма и роль алгоритмов в программировании
		Переменные, типы данных, выражения и присваивание значений переменным
		Базовый ввод/вывод данных
		Конструкции с условиями и их разновидности
		Итеративные конструкции (циклы) и их разновидности
		Базовые структуры данных
		Функции. Описание, вызов, параметризация
		Классы и обьекты
		Использование основных принципов ООП
		Работа с HTML как с DOM-структурой. Значение CSS для HTML-страниц
		Виды WebElement-локаторов в Selenium WebDriver
		Язык запросов xPath для использования в качестве WebElement локаторов
		Использование принципов OOP при создании собственного тестового фреймворка
		Использование паттернов PageObject и PageFactory при создании собственного тестового фреймворка
		Debug и отладка кода тестов на основе стектрейса ошибки
		Использование testNG фреймворка для удобства работы с тестами
		Использование DataProvider для параметризированных тестов
		Использование Maven для тестового фреймворка
		Использование логгеров при работе автотестов
		Работа с Jenkins для запуска тестов (continuous integration-система)
	"""
	var smm = """
		Введение
		Роль социальных сетей в маркетинге и бизнесе.
		Обзор возможностей и преимущества ведения социальных сетей и таргетированной рекламы.
		  Определение целей и задач бизнеса
		Определение целей и задач бренда/бизнеса в соцсетях
		Понятие KPIs. Формирование KPIs для SMM
		  Стратегия в SMM
		Разработка SMM стратегии.
		Сегментация целевой аудитории. Составление карты эмпатии. Определение формата коммуникации
		Формирование воронки продаж
		Построение контент-стратегии. Формирование контент-плана
		  Рекламные объявления для соцсетей
		Особенности разработки рекламных объявлений для разных целевых аудиторий
		Написание рекламных текстов
		Визуальный контент и работа с ним (баннера, фото и видео)
		  Настройка и управление рекламой в Facebook и Instagram
		Обзор и настройка рекламного кабинета
		Форматы и цели рекламы
		Динамическая реклама
		Ретаргетинг и пиксель
		Установка пикселя с помощью Tag Manager
		LAL и другие типы аудиторий
		  Репутационный маркетинг в соцсетях
		Работа с репутацией
		Работа с негативом
		Построение комьюнити
		  Аналитика эффективности SMM-канала
		Отслеживание эффективности рекламных кампаний и основные способы оптимизации
		Формирование отчетов.
	"""
	var emailMarketing = """
		Введение в e-mail-маркетинг
		Зачем бизнесу нужен e-mail-маркетинг?
		Выбор сервиса рассылок
		Как не попасть в спам?
		Какую рассылку выбрать: ручную или автоматическую?
		  Сбор базы для рассылки
		Где взять подписчиков?
		Инструменты сбора подписчиков и сервисы
		Превращаем посетителей сайта в подписчиков
		Как получить подписчиков из оффлайн каналов
		Виды форм подписок и где их размещать
		Что такое лид магнит и как с ним работать
		Как проводить правильные эксперименты при сборе контактов на сайте
		  Сегментация: отправляем правильные письма правильным людям
		Зачем сегментировать базу контактов и какие есть подходы
		Как сегментация влияет на увеличение продаж
		Сегментация в сервисе рассылок и как ее организовать
		Стратегия развития сегментов от подписчика до клиента
		  Типы писем для рассылок
		Welcome серия
		Промо рассылки: скидки, акции, распродажи
		Письма после совершения покупки
		Триггерные письма
		Письма для реанимации клиентов
		  Пошаговое создание письма
		Почему шаблон письма должен повторять стиль сайта: логотип, цвета, меню
		Что такое Preheader и зачем он нужен?
		Специальные символы в теме письма – нужно ли их использовать
		Хорошая тема письма: какой она должна быть
		Как написать текст продающего письма?
		Структуры письма, шрифты, цвета
		Как правильно вставлять картинки
		Кнопки и ссылки – сколько и как размещать
		Как оформить footer письма
		UTM метки – что это и зачем они нужны
		Нужно ли отправлять тестовые письма
		Отправка письма
		  Создаем автоматические сценарии писем
		Работа с посетителями, которые сделали заказ, но не оплатили
		Работа с клиентами, которые положили товар в корзину, но не оформили заказ (интернет-магазины)
		Работа с постоянными клиентами – повторные продажи
		Мультиканальные сценарии: e-mail, смс, вайбер, пуш-уведомления
		  Анализ эффективности рассылок
		Основные показатели эффективности e-mail-рассылок: open rate, click rate, CTR
		Доставляемость писем
		Отчеты в системах отправки рассылок
		Данные Google Analytics
		  Команда для запуска e-mail-рассылок
		Кто должен заниматься e-mail-маркетингом
		Нужно ли привлекать к работе программистов
		Копирайтер и дизайнер – а нужны ли они
		Где взять наполнение письма (предложение, акция, скидка)
		Как правильно вести переговоры с заинтересованными лицами и руководством
		Какие KPI ставить в своей работе
	"""
	var profPm = """
		Модуль 1. Вводная часть, обзор экзамена РМР®
		Модуль 2. Основы управления проектами
		Проект и его характеристики, управление проектом и операционная деятельность; программа и портфель проектов; жизненный цикл проекта и продукта; фазы проекта; группы процессов и области знаний управления проектом; адаптация процессов; бизнес-кейс и план управления выгодами проекта, факторы среды организации и корпоративные активы процессов, виды организационных структур в компании, офис управления проектами, роль и функции руководителя проектов, технические знания, лидерство и предпринимательская смекалка руководителя проекта.
		Модуль 3. Инициация проекта
		Предварительная оценка проекта, проведение встреч, оценка целесообразности и реалистичности; определение ключевых результатов проекта и управление ожиданиями заинтересованных сторон; анализ заинтересованных сторон, рисков, предположений и ограничений проекта для разработки стратегии реализации проекта; устав проекта; оценка выгод и эффекта проекта; инструменты и техники оценки проекта; стратегическое управление.
		Модуль 4. Планирование проекта
		Обзор и оценка детальных требований, ограничений и предположений проекта; формирование содержание, календарного плана, бюджета и планов управления проектом по областям знаний: плана управления содержанием, затратами, сроками, ресурсами, коммуникациями, закупками, качеством, рисками; формирование плана управления изменениями и работы с заинтересованными сторонами; проведение стартовой встречи команды проекта; инструменты планирования затрат; виды контрактов и критерии их выбора; принципы бережливого производства; техники сбора требований; оценка влияния законодательства и окружающей среды; техники формирования содержания проекта, иерархическая структура работ, инструменты и техники составления календарного плана проекта; активное слушание, техники мозгового штурма, управление конфигурацией; техники сбора данных; принятие решений; техника экспертной оценки; фасилитация; инструменты управления информацией; навыки межличностной коммуникации; проведение встреч и переговоров, инструменты и техники презентаций, управление временем и расстановка приоритетов; принципы финансирования проектов; управление отношениями; техники оценки рисков; ситуационная осведомленность; техники работы с заинтересованными лицами, основы работы с MS Project или его аналогами.
		Модуль 5. Выполнение проекта
		Управление командой, внедрение изменений и корректирующих действий в проект, работа с рисками и проблемами, управление потоком информации в проекте, формирование и развитие отношений с заинтересованными лицами; процессы постоянного совершенствования; техники работы с контрактами и поставщиками, обеспечение качества, реализация эффекта проекта; коучинг, менторинг, обучение и техники мотивации команды; каналы, методы, инструменты и техники коммуникаций; работа с конфликтами; делегирование; разнообразие и культурные особенности в проекте; эмоциональный интеллект; управление знаниями; управление виртуальными/удаленными командами.
		Модуль 6: Мониторинг и контроль проекта
		Оценка хода проекта: инструменты и техники, управление изменениями в проекте, верификация результатов проекта, мониторинг и оценка рисков, журнал проблем проекта, изученные уроки, мониторинг закупочных работ; оценка производительности команды, анализ процесса, лимиты контроля проекта, принципы работы с финансами проекта, инструменты оценки качества, стратегии работы с рисками, техники валидации и верификации, техники управления изменениями; метрики оценки удовлетворенности клиента.
		Модуль 7: Закрытие проекта
		Финальный прием результатов проекта, их передача заинтересованным сторонам, финансовое, юридическое и административное закрытие проекта, подготовка финального отчета проекта, распространение изученных уроков по проекту, обратная связь; практики проверки соответствия требованиям, процедуры завершения процессов в проекте, техники обратной связи.
		Модуль 8. Основы управления гибкими проектами
		Гибкий жизненный цикл проекта; адаптация процессов под потребности компании, проекта и продукта; гибридные жизненные циклы проекта; гибкое мировоззрение и лидерство через служение; специфика планирования, реализации и закрытия гибких проектов; команды и роли в гибких проектах; управление изменениями в компании; гибкий офис управления проектами.
		Модуль 9. Профессиональная ответственность руководителя проектов
		Ответственность, уважительное отношение, честность и справедливость руководителя проекта в работе и жизни. Экзамен (тест) на проверку знаний.
	"""
	var agileScrum = """
		Знакомство с Agile

		Виды жизненных циклов проектов, их плюсы и минусы
		В каких проектах хорошо работают agile-подходы
		Специфика и эффект гибкого проекта
		Бизнес-кейс проекта и выбор подхода к его организации (практика)
		Обзор сертификаций по agile/scrum
		Agile мировоззрение

		Быть и делать agile: правильный подход к применению agile
		Что такое «гибкое мировоззрение»
		Agile manifesto: ценности и принципы гибких подходов
		Оценка гибкости компании (практика)
		Виды гибких практик

		Основы экстремального программирования
		Организация проекта по канбану
		Обзор скрам-фреймворка
		Практика скрама

		Фундаменты и ценности скрама
		Ролевая модель в скраме
		Артефакты скрама
		5 ключевых событий в скраме
		Деловая игра (скрам-лего)
		Работа с командами в скраме

		Принципы двусторонней коммуникации
		Модель эффективности коммуникаций
		Организация рабочего пространства
		Работа с виртуальной командой
		Модель командной динамики
		Оценка скорости работы команды (velocity), диаграмма сгорания работ
		Деловая игра (скрам-лего - продолжение)
		Роли руководителей в скраме

		Транзиция роли руководителя проектов
		Практика лидерства через служение
		Эмоциональный интеллект и гибкие навыки
		Скрам и организационные препятствия
		Постоянные улучшения
		4 уровня планирования скрам-проекта

		Подготовка бэклога продукта: пользовательские истории, приоритеты, высокоуровневая оценка
		Дорожная карта развития продукта
		Планирование релизов, скрам покер
		Планирование первой итерации
		Принципы проведения ежедневного скрама
		Чеклист по организации скрам-процесса
		Деловая игра (скрам-лего - завершение)
		Подводим итоги

		Открытый тест от Scrum.org
		Сессия вопросов и ответов
		Закрытие курса
	"""
	var progBasic = """
		Обзор языков программирования
		Обзор парадигм программирования
		Обзор современных языков программирования
		Понятие алгоритма
		Роль алгоритма в решении задач
		Понятие и свойства алгоритма
		Типы алгоритмов
		Базовые конструкции программирования:
		понятие синтаксиса и семантики языков программирования
		переменные, типы данных, выражения и присваивание значений переменным
		представление данных в памяти компьютера: биты, байты и т.п.
		простейший ввод/вывод
		условные конструкции и их разновидности
		итеративные конструкции (циклы):
		циклы с предусловием
		циклы с постусловием
		циклы с известным количеством повторений
		Базовые структуры данных
		одномерные массивы и работа с ними
		двумерные массивы и работа с ними
		пользовательские объекты, их свойства и методы
		понятие ассоциативного массива и принципы работы с ним
		формат JSON
		особенности работы со строками
		особенности работы с датами
		Основы работы с системой контроля версий
		Функции
		описание функции
		вызов функции
		параметры функций
		передача параметров из точки вызова в функцию
		Построение простого графического интерфейса (GUI)
		Формы и работа с элементами управления на web-формах
		События, обработка событий мыши
	"""
}
